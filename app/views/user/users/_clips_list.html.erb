<div id="movie-menu">
  <ul class="clip_lists list-group list-group-flush">
    <% clips.each do |clip| %>
      <li class="clip_list list-group-item d-flex flex-wrap">
        <div class="clip_left mr-3" style="width:100px;">
          <div class="clip_img mb-1" style="position: relative; width: 100%; padding-top: 56.25%;"><img src="https://img.youtube.com/vi/<%= clip.video_id %>/hqdefault.jpg" alt="" class="img-fluid" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;"></img></div>
          <div class="clip_time"><p class="mb-1" style="font-size:9px;">クリップの時間:
              <% if clip.end_time %>
                <%= (clip.end_time.to_i - clip.start_time.to_i) %>
              <% end %>
            </p>
          </div>
        </div>
        <div class="list_item">
          <h6 class="list_title"><%= link_to clip_path(clip.id) do %><%= clip.title %><% end %></h6>
          <div class="clip_data">
            <div class="channel_name"><p class="mb-0" style="font-size:14px;">チャンネル: <a href="https://www.youtube.com/channel/<%= clip.channel.yt_channel_id %>" class=""><%= clip.channel.name %></a></p></div>
            <div class="video_date d-flex flex-wrap" style="font-size:11px;">
              <p class="mb-0 mr-3">クリップ作成日:<%= clip.created_at.strftime('%Y/%m/%d') %></p>
              <p class="mb-0 mr-3">投稿日: <%= clip.published_at.strftime('%Y/%m/%d') %></p>
              <p class="mb-0" id="favorite_btn_<%= clip.id %>" style="font-size:12px;"><%= render 'user/favorites/favorite_btn', clip: clip %></p>
            </div>
            <div class="tag_list">
              <ul class="list-group list-group-horizontal list-unstyled" style="font-size:14px;">
                <p class="mb-0">タグ:</p><li class="clip_tag ml-1 mr-2 mb-0">test</li>
              </ul>
            </div>
          </div>
        </div>
        <div class="ml-auto d-flex flex-column">
          <div class="playlist_clip btn py-0">
            <i class="fas fa-play"></i>
          </div>
          <div class="add_to_playlist btn py-0 my-auto">
          <!--<div class="py-0 my-auto">-->
          	<div type="button" class="" data-toggle="modal" data-target="#testModal" onclick="setSelectedClip(<%= clip.id %>);" data-clip-id="<%= clip.id %>" data: { clip_id: <%= clip.id %> }>
          		<i class="fas fa-indent"></i>
          	</div>
				    <%#= link_to "#", data: { clip_id: clip.id }, data-toggle: "model", data-target: "#testModal", class: 'add_to_playlist btn text-muted' do %>
				      <!--<i class="fas fa-indent"></i>-->
				    <%# end %>
          </div>
      <div class="clip-select">
		    <%= link_to "#", data: { clip_id: clip.id }, class: 'text-muted' do %>
		      <i class="far fa-circle"></i>2
		    <% end %>
		  </div>
          <% if @user == current_user %>
            <div class="mx-auto">
            	<%= link_to clip, method: :delete, data: { confirm: '本当に消しますか？' }, class: "btn btn-sm py-0" do %>
            		<i class="fas fa-trash-alt"></i>
            	<% end %>
            </div>
          <% end %>
        </div>
      </li>
    <% end %>
  </ul>
</div>

<!-- モーダル -->
<div class="modal fade" id="testModal" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
  <%= render "user/clips/add_to_playlist", clips: @clips, playlists: playlists, playlist_new: playlist_new %>
</div>



<script>
//IFrame Player APIを呼び出す
  const tag = document.createElement('script');
  tag.src = "https://www.youtube.com/player_api";
  const firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

//プレーヤーの準備
	var ytNum = 0;
	let thumbInsert = '';
	let ytPlayer;
	let ytData = [
	  //{ youtubeのID, 開始時間(秒), 終了時間(秒) },
	  <% @clips.each do |clip| %>
	    { id: '<%= clip.video_id %>', start: '<%= clip.start_time %>', end: '<%= clip.end_time %>' },
	  <% end %>
	];

// 動画プレーヤーの読み込み
// 	window.onYouTubeIframeAPIReady = function() {
	function onYouTubeIframeAPIReady() {
    ytPlayer = new YT.Player('movie-play', {
      width: '100%',
      height: '100%',
      videoId: ytData[0]['id'],
			playerVars:{
				rel: 0, //関連動画なし
				modestbranding: 1, //YouTube ロゴなし
				start: ytData[0]['start'],
				end: ytData[0]['end'],
			},
			events: { /* イベント */
        'onReady': onPlayerReady,   /* プレーヤの準備完了時 */
        'onStateChange': onPlayerStateChange   /* 動画プレーヤーのステータス変更 */
      }
    });
    spotArea(ytNum);
  }
	//動画の再生
	function onPlayerReady(event) {
    event.target.playVideo();
  }
	function play(ytNum) {
		ytPlayer.loadVideoById({
			'videoId': ytData[ytNum]['id'],
      'startSeconds': ytData[ytNum]['start'],
      'endSeconds': ytData[ytNum]['end'],
      'suggestedQuality': 'medium',
			'rel': 0, //関連動画なし
			'modestbranding': 1,
		});
		spotArea(ytNum);
	}

//リストクリック
	$(function() {
	  /* 指定した動画を再生 */
		$('#movie-menu .playlist_clip').on('click', function() {
			ytNum = $('#movie-menu .playlist_clip').index(this)
				console.log(ytNum);
				console.log(ytData[ytNum]['id']);
		// 	spotArea(ytNum);
			play(ytNum);
			return false;
		});
	});

// 連続再生
	function onPlayerStateChange(event) {
		if ($('#continuous_playback').parent().hasClass('active')) {
				console.log(event);
			playback(event);
			if (event.data == YT.PlayerState.ENDED) { //ENDED == 0
				if (playlog == 11) {
					playlog = 22;
					ytNum = parseInt(ytNum) + 1;
						console.log(playlog);
						console.log(ytNum);
				// 	spotArea(ytNum)
					play(ytNum);
				}
			}
		} else if ($('#shuffle_playback').parent().hasClass('active')) {
			console.log(event);
			playback(event);
			if (event.data == YT.PlayerState.ENDED) {
				if (playlog == 11) {
					ytNum = Math.floor( Math.random() * ytData.length );
					playlog = 22;
						console.log(playlog);
						console.log(ytNum);
				// 	spotArea(ytNum)
					play(ytNum);
				}
			}
		}
	}

	function playback(event) {
		if (event.data == 1) {
			playlog = 11;
			console.log(playlog);
		}
	}

  function spotArea(ytNum) {
    console.log(ytNum);
    ytNum = parseInt(ytNum);
    $('.playlist_clip').removeClass('bg-secondary');
    $('.playlist_clip').eq(ytNum).addClass('bg-secondary');
  }

// clipID送信用
  var selectedClipId = null;

  $('.add_to_playlist').click(function() {
    var clipId = $(this).data('clip_id');
    // var clipId = $(this).data('clip-id');
  });

  $(document).ready(function() {
    $('.clip-select a').on('click', function(e) {
      e.preventDefault();
      var clipId = $(this).data('clip-id');
      $('#selected_clip_id').val(clipId);
    });
  });

//   //初回読み込み、リロード、ページ切り替えで動く。
// $(document).on('turbolinks:load', function() { });

// //初回読み込み、ページ切り替えで動く。リロードは動かない
// $(document).on('turbolinks:render', function() {　});

// //ページ遷移前に行いたい処理用。ページ切り替えでもリロードでも動かない
// $(document).on('turbolinks:request-start', function() {　});avascripts/script.js

</script>